commit 17a73a6d8b4c46f3e87fc53c7c25fa7cec01d707
Author: Raoni Fassina Firmino <raoni@linux.ibm.com>
Date:   Mon May 3 16:59:35 2021 -0300

    powerpc64le: Fix ifunc selection for memset, memmove, bzero and bcopy
    
    The hwcap2 check for the aforementioned functions should check for
    both PPC_FEATURE2_ARCH_3_1 and PPC_FEATURE2_HAS_ISEL but was
    mistakenly checking for any one of them, enabling isa 3.1 version of
    the functions in incompatible processors, like POWER8.
    
    Reviewed-by: Tulio Magno Quites Machado Filho <tuliom@linux.ibm.com>

diff --git a/sysdeps/powerpc/powerpc64/multiarch/bcopy.c b/sysdeps/powerpc/powerpc64/multiarch/bcopy.c
index 705fef33d4e57557..3c6528e5dbccfdbd 100644
--- a/sysdeps/powerpc/powerpc64/multiarch/bcopy.c
+++ b/sysdeps/powerpc/powerpc64/multiarch/bcopy.c
@@ -28,10 +28,10 @@ extern __typeof (bcopy) __bcopy_power10 attribute_hidden;
 
 libc_ifunc (bcopy,
 #ifdef __LITTLE_ENDIAN__
-	     hwcap2 & (PPC_FEATURE2_ARCH_3_1 |
-		       PPC_FEATURE2_HAS_ISEL)
-	     && (hwcap & PPC_FEATURE_HAS_VSX)
-	     ? __bcopy_power10 :
+	    (hwcap2 & PPC_FEATURE2_ARCH_3_1
+	     && hwcap2 & PPC_FEATURE2_HAS_ISEL
+	     && hwcap & PPC_FEATURE_HAS_VSX)
+	    ? __bcopy_power10 :
 #endif
             (hwcap & PPC_FEATURE_HAS_VSX)
             ? __bcopy_power7
diff --git a/sysdeps/powerpc/powerpc64/multiarch/bzero.c b/sysdeps/powerpc/powerpc64/multiarch/bzero.c
index 4ce98e324d12a31e..b08b381b4a3999f1 100644
--- a/sysdeps/powerpc/powerpc64/multiarch/bzero.c
+++ b/sysdeps/powerpc/powerpc64/multiarch/bzero.c
@@ -33,7 +33,8 @@ extern __typeof (bzero) __bzero_power10 attribute_hidden;
 
 libc_ifunc (__bzero,
 # ifdef __LITTLE_ENDIAN__
-	    (hwcap2 & (PPC_FEATURE2_ARCH_3_1 | PPC_FEATURE2_HAS_ISEL)
+	    (hwcap2 & PPC_FEATURE2_ARCH_3_1
+	     && hwcap2 & PPC_FEATURE2_HAS_ISEL
 	     && hwcap & PPC_FEATURE_HAS_VSX)
 	    ? __bzero_power10 :
 # endif
diff --git a/sysdeps/powerpc/powerpc64/multiarch/ifunc-impl-list.c b/sysdeps/powerpc/powerpc64/multiarch/ifunc-impl-list.c
index 11532f77d4d03b2a..6e36659d1903448a 100644
--- a/sysdeps/powerpc/powerpc64/multiarch/ifunc-impl-list.c
+++ b/sysdeps/powerpc/powerpc64/multiarch/ifunc-impl-list.c
@@ -75,9 +75,9 @@ __libc_ifunc_impl_list (const char *name, struct libc_ifunc_impl *array,
   IFUNC_IMPL (i, name, memmove,
 #ifdef __LITTLE_ENDIAN__
 	      IFUNC_IMPL_ADD (array, i, memmove,
-			      hwcap2 & (PPC_FEATURE2_ARCH_3_1 |
-					PPC_FEATURE2_HAS_ISEL)
-			      && (hwcap & PPC_FEATURE_HAS_VSX),
+			      hwcap2 & PPC_FEATURE2_ARCH_3_1
+			      && hwcap2 & PPC_FEATURE2_HAS_ISEL
+			      && hwcap & PPC_FEATURE_HAS_VSX,
 			      __memmove_power10)
 #endif
 	      IFUNC_IMPL_ADD (array, i, memmove, hwcap & PPC_FEATURE_HAS_VSX,
@@ -88,8 +88,8 @@ __libc_ifunc_impl_list (const char *name, struct libc_ifunc_impl *array,
   IFUNC_IMPL (i, name, memset,
 #ifdef __LITTLE_ENDIAN__
 	      IFUNC_IMPL_ADD (array, i, memset,
-			      hwcap2 & (PPC_FEATURE2_ARCH_3_1 |
-					PPC_FEATURE2_HAS_ISEL)
+			      hwcap2 & PPC_FEATURE2_ARCH_3_1
+			      && hwcap2 & PPC_FEATURE2_HAS_ISEL
 			      && hwcap & PPC_FEATURE_HAS_VSX,
 			      __memset_power10)
 #endif
@@ -196,8 +196,8 @@ __libc_ifunc_impl_list (const char *name, struct libc_ifunc_impl *array,
   IFUNC_IMPL (i, name, bzero,
 #ifdef __LITTLE_ENDIAN__
 	      IFUNC_IMPL_ADD (array, i, bzero,
-			      hwcap2 & (PPC_FEATURE2_ARCH_3_1 |
-					PPC_FEATURE2_HAS_ISEL)
+			      hwcap2 & PPC_FEATURE2_ARCH_3_1
+			      && hwcap2 & PPC_FEATURE2_HAS_ISEL
 			      && hwcap & PPC_FEATURE_HAS_VSX,
 			      __bzero_power10)
 #endif
@@ -215,9 +215,9 @@ __libc_ifunc_impl_list (const char *name, struct libc_ifunc_impl *array,
   IFUNC_IMPL (i, name, bcopy,
 #ifdef __LITTLE_ENDIAN__
 	      IFUNC_IMPL_ADD (array, i, bcopy,
-			      hwcap2 & (PPC_FEATURE2_ARCH_3_1 |
-					PPC_FEATURE2_HAS_ISEL)
-			      && (hwcap & PPC_FEATURE_HAS_VSX),
+			      hwcap2 & PPC_FEATURE2_ARCH_3_1
+			      && hwcap2 & PPC_FEATURE2_HAS_ISEL
+			      && hwcap & PPC_FEATURE_HAS_VSX,
 			      __bcopy_power10)
 #endif
 	      IFUNC_IMPL_ADD (array, i, bcopy, hwcap & PPC_FEATURE_HAS_VSX,
diff --git a/sysdeps/powerpc/powerpc64/multiarch/memmove.c b/sysdeps/powerpc/powerpc64/multiarch/memmove.c
index 2fd7b6d309e4bedd..27895faad0cab40e 100644
--- a/sysdeps/powerpc/powerpc64/multiarch/memmove.c
+++ b/sysdeps/powerpc/powerpc64/multiarch/memmove.c
@@ -36,10 +36,10 @@ extern __typeof (__redirect_memmove) __memmove_power10 attribute_hidden;
 
 libc_ifunc (__libc_memmove,
 #ifdef __LITTLE_ENDIAN__
-	     hwcap2 & (PPC_FEATURE2_ARCH_3_1 |
-		       PPC_FEATURE2_HAS_ISEL)
-	     && (hwcap & PPC_FEATURE_HAS_VSX)
-	     ? __memmove_power10 :
+	    (hwcap2 & PPC_FEATURE2_ARCH_3_1
+	     && hwcap2 & PPC_FEATURE2_HAS_ISEL
+	     && hwcap & PPC_FEATURE_HAS_VSX)
+	    ? __memmove_power10 :
 #endif
 		     (hwcap & PPC_FEATURE_HAS_VSX)
 		     ? __memmove_power7
diff --git a/sysdeps/powerpc/powerpc64/multiarch/memset.c b/sysdeps/powerpc/powerpc64/multiarch/memset.c
index 4c97622c7d7eb8aa..685623ae870a0725 100644
--- a/sysdeps/powerpc/powerpc64/multiarch/memset.c
+++ b/sysdeps/powerpc/powerpc64/multiarch/memset.c
@@ -41,7 +41,8 @@ extern __typeof (__redirect_memset) __memset_power10 attribute_hidden;
    ifunc symbol properly.  */
 libc_ifunc (__libc_memset,
 # ifdef __LITTLE_ENDIAN__
-	    (hwcap2 & (PPC_FEATURE2_ARCH_3_1 | PPC_FEATURE2_HAS_ISEL)
+	    (hwcap2 & PPC_FEATURE2_ARCH_3_1
+	     && hwcap2 & PPC_FEATURE2_HAS_ISEL
 	     && hwcap & PPC_FEATURE_HAS_VSX)
 	    ? __memset_power10 :
 # endif
