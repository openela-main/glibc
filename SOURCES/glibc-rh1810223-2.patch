commit 279c68ce1336d84d82ce491a4b77086e574ba380
Author: DJ Delorie <dj@redhat.com>
Date:   Mon Feb 3 14:57:23 2020 -0500

    Run nptl/tst-pthread-getattr in a container
    
    See https://bugzilla.redhat.com/show_bug.cgi?id=1653942
    
    This test depends on the kernel's assignment of memory regions, but
    running under ld.so explicitly changes those assignments, sometimes
    sufficiently to cause the test to fail (esp with address space
    randomization).
    
    The easiest way to "fix" the test, is to run it the way the user would
    - without ld.so.  Running it in a container does that.
    
    Reviewed-by: Carlos O'Donell <carlos@redhat.com>

diff --git a/nptl/Makefile b/nptl/Makefile
index b1003cf56b31ddfa..071c53866d14d2fe 100644
--- a/nptl/Makefile
+++ b/nptl/Makefile
@@ -293,7 +293,7 @@ tests = tst-attr1 tst-attr2 tst-attr3 tst-default-attr \
 	tst-exec1 tst-exec2 tst-exec3 tst-exec4 tst-exec5 \
 	tst-exit1 tst-exit2 tst-exit3 \
 	tst-stdio1 tst-stdio2 \
-	tst-stack1 tst-stack2 tst-stack3 tst-stack4 tst-pthread-getattr \
+	tst-stack1 tst-stack2 tst-stack3 tst-stack4 \
 	tst-pthread-attr-affinity tst-pthread-mutexattr \
 	tst-unload \
 	tst-dlsym1 \
@@ -322,6 +322,8 @@ tests = tst-attr1 tst-attr2 tst-attr3 tst-default-attr \
 	tst-rwlock-pwn \
 	tst-rwlock-tryrdlock-stall tst-rwlock-trywrlock-stall
 
+tests-container =  tst-pthread-getattr
+
 tests-internal := tst-rwlock19 tst-rwlock20 \
 		  tst-sem11 tst-sem12 tst-sem13 \
 		  tst-barrier5 tst-signal7 tst-mutex8 tst-mutex8-static \
@@ -633,7 +635,7 @@ ifeq ($(build-shared),yes)
 $(addprefix $(objpfx), \
   $(filter-out $(tests-static) $(xtests-static) $(tests-reverse) \
     $(tests-nolibpthread), \
-    $(tests) $(tests-internal) $(xtests) $(test-srcs))): \
+    $(tests) $(tests-internal) $(xtests) $(test-srcs) $(tests-container))): \
 	$(objpfx)libpthread.so
 $(objpfx)tst-unload: $(libdl)
 # $(objpfx)../libc.so is used instead of $(common-objpfx)libc.so,
