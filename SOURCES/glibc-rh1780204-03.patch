From 7741c9c7f566d09f57db45df9377ac497f6232a5 Mon Sep 17 00:00:00 2001
From: Stefan Liebler <stli@linux.ibm.com>
Date: Wed, 11 Dec 2019 15:09:15 +0100
Subject: [PATCH 03/28] Always use wordsize-64 version of s_floor.c.

This patch replaces s_floor.c in sysdeps/dbl-64 with the one in
sysdeps/dbl-64/wordsize-64 and removes the latter one.
The code is not changed except changes in code style.

Also adjusted the include path in x86_64 and sparc64 files.

Reviewed-by: Adhemerval Zanella <adhemerval.zanella@linaro.org>
(cherry picked from commit 95b0c2c431510013eb2f7385fc078ee2498f83bf)
Note: glibc 2.28 had no NO_MATH_REDIRECT in wordsize-64 version.
---
 sysdeps/ieee754/dbl-64/s_floor.c              | 92 +++++++++----------
 sysdeps/ieee754/dbl-64/wordsize-64/s_floor.c  | 71 --------------
 .../sparc64/fpu/multiarch/s_floor-generic.c   |  2 +-
 .../sparc64/fpu/multiarch/s_floor-vis3.c      |  2 +-
 sysdeps/x86_64/fpu/multiarch/s_floor-c.c      |  2 +-
 5 files changed, 45 insertions(+), 124 deletions(-)
 delete mode 100644 sysdeps/ieee754/dbl-64/wordsize-64/s_floor.c

diff --git a/sysdeps/ieee754/dbl-64/s_floor.c b/sysdeps/ieee754/dbl-64/s_floor.c
index f27c6f3ad2..b551a1aafa 100644
--- a/sysdeps/ieee754/dbl-64/s_floor.c
+++ b/sysdeps/ieee754/dbl-64/s_floor.c
@@ -1,4 +1,24 @@
-/* @(#)s_floor.c 5.1 93/09/24 */
+/* Round double to integer away from zero.
+   Copyright (C) 2011-2019 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+   Contributed by Ulrich Drepper <drepper@cygnus.com>, 2011.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+/* Based on a version which carries the following copyright:  */
+
 /*
  * ====================================================
  * Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
@@ -10,6 +30,11 @@
  * ====================================================
  */
 
+#include <math.h>
+#include <math_private.h>
+#include <stdint.h>
+#include <libm-alias-double.h>
+
 /*
  * floor(x)
  * Return x rounded toward -inf to integral value
@@ -17,68 +42,35 @@
  *	Bit twiddling.
  */
 
-#include <math.h>
-#include <math_private.h>
-#include <libm-alias-double.h>
-
 double
 __floor (double x)
 {
-  int32_t i0, i1, j0;
-  uint32_t i, j;
-  EXTRACT_WORDS (i0, i1, x);
-  j0 = ((i0 >> 20) & 0x7ff) - 0x3ff;
-  if (j0 < 20)
+  int64_t i0;
+  EXTRACT_WORDS64 (i0, x);
+  int32_t j0 = ((i0 >> 52) & 0x7ff) - 0x3ff;
+  if (__glibc_likely (j0 < 52))
     {
       if (j0 < 0)
 	{
-	  /* return 0*sign(x) if |x|<1 */
+	  /* return 0 * sign (x) if |x| < 1  */
 	  if (i0 >= 0)
-	    {
-	      i0 = i1 = 0;
-	    }
-	  else if (((i0 & 0x7fffffff) | i1) != 0)
-	    {
-	      i0 = 0xbff00000; i1 = 0;
-	    }
+	    i0 = 0;
+	  else if ((i0 & 0x7fffffffffffffffl) != 0)
+	    i0 = 0xbff0000000000000l;
 	}
       else
 	{
-	  i = (0x000fffff) >> j0;
-	  if (((i0 & i) | i1) == 0)
-	    return x;                        /* x is integral */
+	  uint64_t i = 0x000fffffffffffffl >> j0;
+	  if ((i0 & i) == 0)
+	    return x;			 /* x is integral */
 	  if (i0 < 0)
-	    i0 += (0x00100000) >> j0;
-	  i0 &= (~i); i1 = 0;
-	}
-    }
-  else if (j0 > 51)
-    {
-      if (j0 == 0x400)
-	return x + x;                   /* inf or NaN */
-      else
-	return x;                       /* x is integral */
-    }
-  else
-    {
-      i = ((uint32_t) (0xffffffff)) >> (j0 - 20);
-      if ((i1 & i) == 0)
-	return x;                       /* x is integral */
-      if (i0 < 0)
-	{
-	  if (j0 == 20)
-	    i0 += 1;
-	  else
-	    {
-	      j = i1 + (1 << (52 - j0));
-	      if (j < i1)
-		i0 += 1;                /* got a carry */
-	      i1 = j;
-	    }
+	    i0 += 0x0010000000000000l >> j0;
+	  i0 &= ~i;
 	}
-      i1 &= (~i);
+      INSERT_WORDS64 (x, i0);
     }
-  INSERT_WORDS (x, i0, i1);
+  else if (j0 == 0x400)
+    return x + x;			/* inf or NaN */
   return x;
 }
 #ifndef __floor
diff --git a/sysdeps/ieee754/dbl-64/wordsize-64/s_floor.c b/sysdeps/ieee754/dbl-64/wordsize-64/s_floor.c
deleted file mode 100644
index f7e0a77ec3..0000000000
--- a/sysdeps/ieee754/dbl-64/wordsize-64/s_floor.c
+++ /dev/null
@@ -1,71 +0,0 @@
-/* Round double to integer away from zero.
-   Copyright (C) 2011-2018 Free Software Foundation, Inc.
-   This file is part of the GNU C Library.
-   Contributed by Ulrich Drepper <drepper@cygnus.com>, 2011.
-
-   The GNU C Library is free software; you can redistribute it and/or
-   modify it under the terms of the GNU Lesser General Public
-   License as published by the Free Software Foundation; either
-   version 2.1 of the License, or (at your option) any later version.
-
-   The GNU C Library is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   Lesser General Public License for more details.
-
-   You should have received a copy of the GNU Lesser General Public
-   License along with the GNU C Library; if not, see
-   <http://www.gnu.org/licenses/>.  */
-
-/* Based on a version which carries the following copyright:  */
-
-/*
- * ====================================================
- * Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
- *
- * Developed at SunPro, a Sun Microsystems, Inc. business.
- * Permission to use, copy, modify, and distribute this
- * software is freely granted, provided that this notice
- * is preserved.
- * ====================================================
- */
-
-#include <math.h>
-#include <math_private.h>
-#include <stdint.h>
-#include <libm-alias-double.h>
-
-/*
- * floor(x)
- * Return x rounded toward -inf to integral value
- * Method:
- *	Bit twiddling.
- */
-
-
-double
-__floor (double x)
-{
-	int64_t i0;
-	EXTRACT_WORDS64(i0,x);
-	int32_t j0 = ((i0>>52)&0x7ff)-0x3ff;
-	if(__builtin_expect(j0<52, 1)) {
-	    if(j0<0) {
-		/* return 0*sign(x) if |x|<1 */
-		if(i0>=0) {i0=0;}
-		else if((i0&0x7fffffffffffffffl)!=0)
-		  { i0=0xbff0000000000000l;}
-	    } else {
-		uint64_t i = (0x000fffffffffffffl)>>j0;
-		if((i0&i)==0) return x; /* x is integral */
-		if(i0<0) i0 += (0x0010000000000000l)>>j0;
-		i0 &= (~i);
-	    }
-	    INSERT_WORDS64(x,i0);
-	} else if (j0==0x400)
-	    return x+x;	/* inf or NaN */
-	return x;
-}
-#ifndef __floor
-libm_alias_double (__floor, floor)
-#endif
diff --git a/sysdeps/sparc/sparc64/fpu/multiarch/s_floor-generic.c b/sysdeps/sparc/sparc64/fpu/multiarch/s_floor-generic.c
index 0f3361a9fb..c92b600df1 100644
--- a/sysdeps/sparc/sparc64/fpu/multiarch/s_floor-generic.c
+++ b/sysdeps/sparc/sparc64/fpu/multiarch/s_floor-generic.c
@@ -1,2 +1,2 @@
 #define __floor __floor_generic
-#include <sysdeps/ieee754/dbl-64/wordsize-64/s_floor.c>
+#include <sysdeps/ieee754/dbl-64/s_floor.c>
diff --git a/sysdeps/sparc/sparc64/fpu/multiarch/s_floor-vis3.c b/sysdeps/sparc/sparc64/fpu/multiarch/s_floor-vis3.c
index d9974161b0..35564b9139 100644
--- a/sysdeps/sparc/sparc64/fpu/multiarch/s_floor-vis3.c
+++ b/sysdeps/sparc/sparc64/fpu/multiarch/s_floor-vis3.c
@@ -20,4 +20,4 @@
 
 #define __floor __floor_vis3
 
-#include <sysdeps/ieee754/dbl-64/wordsize-64/s_floor.c>
+#include <sysdeps/ieee754/dbl-64/s_floor.c>
diff --git a/sysdeps/x86_64/fpu/multiarch/s_floor-c.c b/sysdeps/x86_64/fpu/multiarch/s_floor-c.c
index 68733b69ef..002d12247e 100644
--- a/sysdeps/x86_64/fpu/multiarch/s_floor-c.c
+++ b/sysdeps/x86_64/fpu/multiarch/s_floor-c.c
@@ -1,3 +1,3 @@
 #undef __floor
 #define __floor __floor_c
-#include <sysdeps/ieee754/dbl-64/wordsize-64/s_floor.c>
+#include <sysdeps/ieee754/dbl-64/s_floor.c>
-- 
2.18.2

